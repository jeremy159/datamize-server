name: Build & Formatting

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  DATAMIZE_ENVIRONMENT: test

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: datamize
        ports:
          - 5432:5432
    env:
      SQLX_VERSION: 0.7.0
      SQLX_FEATURES: "rustls,postgres"
      DATABASE_URL: $postgres://{{ env.POSTGRES_USER }}:{{ env.POSTGRES_PASSWORD }}@localhost:5432/{{ env.POSTGRES_DB }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache sqlx-cli
        uses: Swatinem/rust-cache@v2
        id: cache-sqlx
        with:
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}

      - name: Install sqlx-cli
        # if: steps.cache-sqlx.outputs.cache-hit == false
        run: |
          cargo install sqlx-cli --force --version=${{ env.SQLX_VERSION }} --features ${{ env.SQLX_FEATURES }} --no-default-features --locked

      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Check sqlx-data.json is up-to-date
        working-directory: ./crates/db-postgres
        run: |
          cargo sqlx prepare --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features --no-deps -D warnings
